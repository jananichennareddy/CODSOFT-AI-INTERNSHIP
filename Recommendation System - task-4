{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPBweGmcx/1EhCRmpo9MSXl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jananichennareddy/CODSOFT-AI-INTERNSHIP/blob/main/Recommendation%20System%20-%20task-4\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jMbNPi-soiCf",
        "outputId": "af246d42-4828-409e-83e2-2b818974a79f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "If you like 'Harry Potter', you may also like:\n",
            "['The Hobbit', 'Twilight', 'Sherlock Holmes']\n"
          ]
        }
      ],
      "source": [
        "# Book Recommendation System using Content-Based Filtering (Cosine Similarity)\n",
        "\n",
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        "from sklearn.metrics.pairwise import cosine_similarity\n",
        "\n",
        "# Sample dataset: books with short descriptions\n",
        "books = {\n",
        "    \"Harry Potter\": \"magic fantasy adventure wizard school\",\n",
        "    \"The Hobbit\": \"fantasy adventure dragon journey\",\n",
        "    \"Sherlock Holmes\": \"detective mystery crime investigation\",\n",
        "    \"The Da Vinci Code\": \"mystery thriller secret history\",\n",
        "    \"Pride and Prejudice\": \"romance love society classic\",\n",
        "    \"Twilight\": \"romance vampire fantasy love\"\n",
        "}\n",
        "\n",
        "# Convert to list\n",
        "titles = list(books.keys())\n",
        "descriptions = list(books.values())\n",
        "\n",
        "# Convert text to vectors\n",
        "vectorizer = CountVectorizer()\n",
        "count_matrix = vectorizer.fit_transform(descriptions)\n",
        "\n",
        "# Compute similarity\n",
        "cosine_sim = cosine_similarity(count_matrix)\n",
        "\n",
        "# Function to recommend books\n",
        "def recommend_book(title):\n",
        "    if title not in titles:\n",
        "        return \"Book not found in database.\"\n",
        "\n",
        "    idx = titles.index(title)\n",
        "    sim_scores = list(enumerate(cosine_sim[idx]))\n",
        "    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n",
        "\n",
        "    # Get top 3 similar books\n",
        "    recommended = [titles[i] for i, score in sim_scores[1:4]]\n",
        "    return recommended\n",
        "\n",
        "# Example\n",
        "print(\"If you like 'Harry Potter', you may also like:\")\n",
        "print(recommend_book(\"Harry Potter\"))"
      ]
    }
  ]
}